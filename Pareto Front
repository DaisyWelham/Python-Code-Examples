#This will check both xs are LESS. If needed, chaqnge the "<" to a ">"

def f1(x1,x2): #Checking x1[0] < x2[0]
    if x1[0] <= x2[0]:
        return(True)
    else:
        return(False)
    
def f2(x1,x2): #Checking x1[1] < x2[1]
    if x1[1] <= x2[1]:
        return(True)
    else:
        return(False)
    
def is_dominated(x1,x2):
    if x1 == x2:
        return(0)
    elif f1(x1,x2) and f2(x1,x2):
        return(1)
    elif f1(x2,x1) and f2(x2,x1):
        return(2)
    else:
        return(3)
    
#Testing    
def test(n1,n2):
    import random as r
    x_test = []
    for j in range(n1):
        xj = []
        for k in range(n2):
            xj.append(r.randint(1,100))
        x_test.append(xj)
    return(x_test)
        
x=test(10,2) 

#x = [[1, 5],
# [2.2, 5.2],
# [2, 4.1],
# [3.3, 4.3],
# [4.5, 3.4],
# [4.1, 3],
# [5, 6]]

print("Input:")
for j in range(len(x)):
    print("x",j,"= ",x[j])
print(" ")
 

print("Pareto matrix")
for j in range(len(x)):
    row = []
    for k in range(len(x)):
        row.append(is_dominated(x[j],x[k]))
    print(row)
print("")

pareto_shell = []
print("Pareto analysis")
import matplotlib.pyplot as plt
for j in range(len(x)):
    is_pareto = True
    for k in range(len(x)):
        if is_dominated(x[j],x[k]) == 2:
            is_pareto = False
    if is_pareto == True:
        print("The", j, "th x, i.e. x",j+1, " is in the Pareto front:",x[j])
        plt.scatter(x[j][0],x[j][1],color="Green")
        pareto_shell.append(x[j])
    else:
        plt.scatter(x[j][0],x[j][1],color="Red")

plt.show()

def sort_up(x_data):
    output = x_data
    for j in range(len(x_data)):
        for k in range(len(x_data)):
            if f1(output[j],output[k]):
                output[j],output[k] = output[k],output[j]
    return(output)

def pareto_volume(x_data):
    x_data = sort_up(x_data)
    vs = []
    print("v 0 =",x_data[0][0], " x ", x_data[0][1],"=",x_data[0][0]*x_data[0][1])
    volume = x_data[0][0]*x_data[0][1]
    vs.append(x_data[0][0]*x_data[0][1])
    for j in range(len(x_data)-1):
        print("v",j+1,"=",x_data[j+1][1], " x ", "(",x_data[j+1][0],"-",x_data[j][0],") =",x_data[j+1][1] * (x_data[j+1][0] - x_data[j][0]))
        volume += x_data[j+1][1] * (x_data[j+1][0] - x_data[j][0])
        vs.append(x_data[j+1][1] * (x_data[j+1][0] - x_data[j][0]))
    print("Volume = ",vs[0])
    for j in range(len(vs)-1):
        print("+",vs[j+1])
    return(volume)
print("Pareto shell =",pareto_shell)
print(pareto_volume(pareto_shell))
